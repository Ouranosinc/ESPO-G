Building DAG of jobs...
Using shell: /cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/bin/bash
Provided cores: 6
Rules claiming more threads will be scaled down.
Provided resources: mem_mb=60000, mem_mib=57221, disk_mb=1000, disk_mib=954, time=5
Select jobs to execute...
Execute 1 jobs...

[Fri Jul 26 13:09:32 2024]
localrule clean_up:
    input: /scratch/oumou/ESPO-G6-SNAKEMAKE/ESPO-G_workdir/CMIP6_ScenarioMIP_AS-RCEC_TaiESM1_ssp585_r1i1p1f1_global_north_nodup_pr_adjusted.zarr, /scratch/oumou/ESPO-G6-SNAKEMAKE/ESPO-G_workdir/CMIP6_ScenarioMIP_AS-RCEC_TaiESM1_ssp585_r1i1p1f1_global_north_nodup_dtr_adjusted.zarr, /scratch/oumou/ESPO-G6-SNAKEMAKE/ESPO-G_workdir/CMIP6_ScenarioMIP_AS-RCEC_TaiESM1_ssp585_r1i1p1f1_global_north_nodup_tasmax_adjusted.zarr
    output: /scratch/oumou/ESPO-G6-SNAKEMAKE/ESPO-G_workdir/CMIP6_ScenarioMIP_AS-RCEC_TaiESM1_ssp585_r1i1p1f1_global_north_nodup_cleaned_up.zarr
    log: logs/clean_up_CMIP6_ScenarioMIP_AS-RCEC_TaiESM1_ssp585_r1i1p1f1_global_north_nodup
    jobid: 0
    reason: Forced execution
    wildcards: region=north_nodup, sim_id=CMIP6_ScenarioMIP_AS-RCEC_TaiESM1_ssp585_r1i1p1f1_global
    threads: 6
    resources: mem_mb=60000, mem_mib=57221, disk_mb=1000, disk_mib=954, tmpdir=/tmp, qos=high_priority, time=5

/home/oumou/.local/lib/python3.11/site-packages/distributed/node.py:182: UserWarning: Port 2051 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46679 instead
2024-07-26 13:09:41 INFO     xscen           {'region_name': 'north_nodup', 'sim_id': 'CMIP6_ScenarioMIP_AS-RCEC_TaiESM1_ssp585_r1i1p1f1_global'}
2024-07-26 13:09:41 INFO     xscen           Started process cleanup.
2024-07-26 13:09:42 INFO     xscen.utils     Dataset unstacked using /project/ctb-frigon/oumou/ESPO-G6-SNAKEMAKE/coords/coords_north_nodup_40x101.nc.
/home/oumou/.local/lib/python3.11/site-packages/xscen/utils.py:451: FutureWarning: the `pandas.MultiIndex` object(s) passed as 'loc' coordinate(s) or data variable(s) will no longer be implicitly promoted and wrapped into multiple indexed coordinates in the future (i.e., one coordinate for each multi-index level + one dimension coordinate). If you want to keep this behavior, you need to first wrap it explicitly using `mindex_coords = xarray.Coordinates.from_pandas_multiindex(mindex_obj, 'dim')` and pass it as coordinates, e.g., `xarray.Dataset(coords=mindex_coords)`, `dataset.assign_coords(mindex_coords)` or `dataarray.assign_coords(mindex_coords)`.
2024-07-26 13:09:42 INFO     xscen           Mask grid cells where tasmin < 100 K.
2024-07-26 13:09:51 INFO     xscen           Process cleanup done in 9.73 s
[Fri Jul 26 13:09:53 2024]
Finished job 0.
1 of 1 steps (100%) done
Storing output in storage.
